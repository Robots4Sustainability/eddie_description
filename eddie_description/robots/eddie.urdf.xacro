<?xml version='1.0'?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="eddie">

    <!-- Arguments -->
    <xacro:arg name="prefix_arm_left" default="kinova_left_" />
    <xacro:arg name="prefix_arm_right" default="kinova_right_" />

    <xacro:arg name="arm" default="gen3" />
    <xacro:arg name="dof" default="7" />
    <xacro:arg name="vision" default="false" />
    <xacro:arg name="robot_ip_left" default="192.168.1.10" />
    <xacro:arg name="robot_ip_right" default="192.168.1.11" />
    <xacro:arg name="username" default="admin" />
    <xacro:arg name="password" default="admin" />
    <xacro:arg name="port" default="10000" />
    <xacro:arg name="port_realtime" default="10001" />
    <xacro:arg name="session_inactivity_timeout_ms" default="60000" />
    <xacro:arg name="connection_inactivity_timeout_ms" default="2000" />

    <!-- <xacro:arg name="gripper" default="robotiq_2f_85" /> -->
    <xacro:arg name="gripper" default="" />
    <xacro:arg name="gripper_joint_name" default="grasp_joint" />

    <xacro:arg name="use_fake_hardware" default="true" />
    <xacro:arg name="fake_sensor_commands" default="true" />

    <xacro:arg name="sim_gz" default="true" />
    <xacro:arg name="sim_isaac" default="false" />

    <xacro:arg name="use_internal_bus_gripper_comm" default="false" />

    <xacro:arg name="camera_width" default="640" />
    <xacro:arg name="camera_height" default="480" />
    <xacro:arg name="camera_fps" default="30" />
    <xacro:arg name="simulation_controllers"
        default="$(find eddie_gazebo)/config/eddie_controller.yaml" />

    <xacro:arg name="use_gpu_2d_laser" default="false" />

    <xacro:include filename="$(find eddie_base_description)/urdf/common.xacro" />
    <xacro:include filename="$(find eddie_base_description)/urdf/eddie_base_gz.urdf.xacro" />
    <xacro:include filename="$(find eddie_torso_description)/urdf/eddie_torso_gz.urdf.xacro" />

    <xacro:include filename="$(find eddie_description)/robots/kortex_robot.xacro" />
    <xacro:include filename="$(find eddie_description)/robots/kortex.ros2_gz_control.xacro" />

    <xacro:include filename="$(find eddie_base_description)/urdf/materials.urdf.xacro" />

    <link name="base_link" />

    <xacro:eddie_base name="eddie_base" parent="base_link"
        use_gpu_2d_laser="$(arg use_gpu_2d_laser)">
        <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0" />
    </xacro:eddie_base>

    <xacro:eddie_torso name="eddie_torso" parent="base_link">
        <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0" />
    </xacro:eddie_torso>

    <!-- initial position for simulations (Mock Hardware, Gazebo, Ignition) -->
    <xacro:arg name="initial_positions_file_left"
        default="$(find eddie_description)/config/initial_positions_arm_left.yaml" />
    <xacro:arg name="initial_positions_file_right"
        default="$(find eddie_description)/config/initial_positions_arm_right.yaml" />

    <!-- convert to property to use substitution in function -->
    <xacro:property name="initial_positions_file_left" default="$(arg initial_positions_file_left)" />
    <xacro:property name="initial_positions_file_right"
        default="$(arg initial_positions_file_right)" />

    <!-- left arm  -->
    <xacro:kinova_arm
        parent="eddie_torso_shoulder_left_arm_attach_link"
        prefix="$(arg prefix_arm_left)"
        arm="$(arg arm)"
        gripper="$(arg gripper)"
        gripper_joint_name="$(arg gripper_joint_name)"
        dof="$(arg dof)"
        vision="$(arg vision)"
        robot_ip="$(arg robot_ip_left)"
        username="$(arg username)"
        password="$(arg password)"
        port="$(arg port)"
        port_realtime="$(arg port_realtime)"
        session_inactivity_timeout_ms="$(arg session_inactivity_timeout_ms)"
        connection_inactivity_timeout_ms="$(arg connection_inactivity_timeout_ms)"
        use_fake_hardware="$(arg use_fake_hardware)"
        fake_sensor_commands="$(arg fake_sensor_commands)"
        initial_positions="${xacro.load_yaml(initial_positions_file_left)}">
        <origin xyz="0 0 0" rpy="0 0 0" />
    </xacro:kinova_arm>

    <xacro:kortex_ros2_control
        name="$(arg prefix_arm_left)KortexMultiInterfaceHardware"
        prefix="$(arg prefix_arm_left)"
        use_fake_hardware="$(arg use_fake_hardware)"
        fake_sensor_commands="$(arg fake_sensor_commands)"
        sim_gz="$(arg sim_gz)"
        tf_prefix=""
        initial_positions="${xacro.load_yaml(initial_positions_file_left)}"
        robot_ip="$(arg robot_ip_left)"
        username="$(arg username)"
        password="$(arg password)"
        port="$(arg port)"
        port_realtime="$(arg port_realtime)"
        session_inactivity_timeout_ms="$(arg session_inactivity_timeout_ms)"
        connection_inactivity_timeout_ms="$(arg connection_inactivity_timeout_ms)"
        use_internal_bus_gripper_comm="$(arg use_internal_bus_gripper_comm)" 
        gripper_joint_name="$(arg gripper_joint_name)"/>

    <!-- right arm -->
    <xacro:kinova_arm
        parent="eddie_torso_shoulder_right_arm_attach_link"
        prefix="$(arg prefix_arm_right)"
        arm="$(arg arm)"
        gripper="$(arg gripper)"
        gripper_joint_name="$(arg gripper_joint_name)"
        dof="$(arg dof)"
        vision="$(arg vision)"
        robot_ip="$(arg robot_ip_right)"
        username="$(arg username)"
        password="$(arg password)"
        port="$(arg port)"
        port_realtime="$(arg port_realtime)"
        session_inactivity_timeout_ms="$(arg session_inactivity_timeout_ms)"
        connection_inactivity_timeout_ms="$(arg connection_inactivity_timeout_ms)"
        use_fake_hardware="$(arg use_fake_hardware)"
        fake_sensor_commands="$(arg fake_sensor_commands)"
        initial_positions="${xacro.load_yaml(initial_positions_file_right)}">
        <origin xyz="0 0 0" rpy="0 0 0" />
    </xacro:kinova_arm>

    <xacro:kortex_ros2_control
        name="$(arg prefix_arm_right)KortexMultiInterfaceHardware"
        prefix="$(arg prefix_arm_right)"
        use_fake_hardware="$(arg use_fake_hardware)"
        fake_sensor_commands="$(arg fake_sensor_commands)"
        sim_gz="$(arg sim_gz)"
        tf_prefix=""
        initial_positions="${xacro.load_yaml(initial_positions_file_right)}"
        robot_ip="$(arg robot_ip_right)"
        username="$(arg username)"
        password="$(arg password)"
        port="$(arg port)"
        port_realtime="$(arg port_realtime)"
        session_inactivity_timeout_ms="$(arg session_inactivity_timeout_ms)"
        connection_inactivity_timeout_ms="$(arg connection_inactivity_timeout_ms)"
        use_internal_bus_gripper_comm="$(arg use_internal_bus_gripper_comm)" 
        gripper_joint_name="$(arg gripper_joint_name)"/>

    <!-- gazebo tag for ros2 control -->
    <gazebo>
        <plugin filename="libgz_ros2_control-system.so"
            name="gz_ros2_control::GazeboSimROS2ControlPlugin">
            <robot_param>robot_description</robot_param>
            <robot_param_node>robot_state_publisher</robot_param_node>
            <parameters>$(arg simulation_controllers)</parameters>
        </plugin>
        <self_collide>1</self_collide>
    </gazebo>

    <gazebo reference="base_link">
        <gravity>true</gravity>
        <self_collide>false</self_collide>
    </gazebo>

    <gazebo>
        <plugin
            filename="gz-sim-odometry-publisher-system"
            name="gz::sim::systems::OdometryPublisher">
            <odom_frame>odom</odom_frame>
            <robot_base_frame>eddie_base_link</robot_base_frame>
        </plugin>

        <plugin
            filename="gz-sim-velocity-control-system"
            name="gz::sim::systems::VelocityControl">
        </plugin>
    </gazebo>

</robot>
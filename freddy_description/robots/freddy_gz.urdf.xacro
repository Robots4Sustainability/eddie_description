<?xml version='1.0'?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="freddy">
    <xacro:arg name="use_gpu_2d_laser" default="false" />

    <!-- Arguments -->
    <xacro:arg name="prefix_arm_left" default="kinova_left_" />
    <xacro:arg name="prefix_arm_right" default="kinova_right_" />

    <!-- Robot prefix -->
    <xacro:arg name="tf_prefix" default="" />

    <!-- Load arms and sensors -->
    <xacro:arg name="load_arms" default="false" />
    <xacro:arg name="load_sensors" default="false" />

    <xacro:arg name="arm" default="gen3" />
    <xacro:arg name="dof" default="7" />
    <xacro:arg name="vision" default="true" />
    <xacro:arg name="robot_ip_left" default="192.168.1.10" />
    <xacro:arg name="robot_ip_right" default="192.168.1.11" />
    <xacro:arg name="username" default="admin" />
    <xacro:arg name="password" default="admin" />
    <xacro:arg name="port" default="10000" />
    <xacro:arg name="port_realtime" default="10001" />
    <xacro:arg name="session_inactivity_timeout_ms" default="60000" />
    <xacro:arg name="connection_inactivity_timeout_ms" default="2000" />

    <xacro:arg name="gripper" default="robotiq_2f_85" />
    <xacro:arg name="gripper_joint_name" default="finger_joint" />
    <xacro:arg name="gripper_max_velocity" default="100.0" />
    <xacro:arg name="gripper_max_force" default="100.0" />
    <xacro:arg name="use_internal_bus_gripper_comm" default="false" />

    <xacro:arg name="use_fake_hardware" default="false" />
    <xacro:arg name="fake_sensor_commands" default="false" />
    <xacro:arg name="sim_gazebo" default="false" />
    <xacro:arg name="sim_gz" default="false" />
    <xacro:arg name="sim_ignition" default="false" />
    <xacro:arg name="sim_isaac" default="false" />
    <xacro:arg name="gazebo_renderer" default="ogre" />
    <xacro:arg name="camera_width" default="640" />
    <xacro:arg name="camera_height" default="480" />
    <xacro:arg name="camera_fps" default="6" />
    <!-- <xacro:arg name="simulation_controllers" -->
        <!-- default="$(find kortex_description)/arm/$(arg arm)/$(arg dof)dof/config/ros2_controllers.yaml" /> -->
    <!-- <xacro:arg name="base_controller"
        default="$(find freddy_gazebo)/config/base_controller.yaml" /> -->

    <xacro:include filename="$(find freddy_base_description)/urdf/materials.urdf.xacro" />
    <xacro:include filename="$(find freddy_base_description)/urdf/freddy_base_gz.urdf.xacro" />
    <xacro:include filename="$(find freddy_torso_description)/urdf/freddy_torso_gz.urdf.xacro" />
    <!-- <xacro:include filename="$(find kortex_description)/robots/kortex_robot.xacro" /> -->

    <!-- <xacro:include filename="$(find freddy_description)/ros2_control/freddy_gz.ros2_control.xacro" /> -->

    <!-- initial position for simulations (Mock Hardware, Gazebo, Ignition) -->
    <xacro:arg name="initial_positions_file"
        default="$(find freddy_description)/config/initial_positions.yaml" />

    <!-- convert to property to use substitution in function -->
    <xacro:property name="initial_positions_file" default="$(arg initial_positions_file)" />

    <link name="base_link"/>

    <xacro:freddy_base name="freddy_base" parent="base_link"
        use_gpu_2d_laser="$(arg use_gpu_2d_laser)">
        <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0" />
    </xacro:freddy_base>

    <xacro:freddy_torso name="freddy_torso" parent="base_link">
        <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0" />
    </xacro:freddy_torso>

    <!-- arms -->
    <!-- Load arms if argument true -->
    <xacro:if value="$(arg load_arms)">
    <!-- left arm -->
    <xacro:load_robot
        parent="freddy_torso_shoulder_left_arm_attach_link"
        arm="$(arg arm)"
        gripper="$(arg gripper)"
        gripper_joint_name="$(arg gripper_joint_name)"
        gripper_max_velocity="$(arg gripper_max_velocity)"
        gripper_max_force="$(arg gripper_max_force)"
        dof="$(arg dof)"
        vision="$(arg vision)"
        robot_ip="$(arg robot_ip_left)"
        username="$(arg username)"
        password="$(arg password)"
        port="$(arg port)"
        port_realtime="$(arg port_realtime)"
        session_inactivity_timeout_ms="$(arg session_inactivity_timeout_ms)"
        connection_inactivity_timeout_ms="$(arg connection_inactivity_timeout_ms)"
        use_internal_bus_gripper_comm="$(arg use_internal_bus_gripper_comm)"
        prefix="$(arg prefix_arm_left)"
        use_fake_hardware="$(arg use_fake_hardware)"
        fake_sensor_commands="$(arg fake_sensor_commands)"
        sim_gazebo="$(arg sim_gazebo)"
        sim_ignition="$(arg sim_ignition)"
        sim_isaac="$(arg sim_isaac)"
        initial_positions="${xacro.load_yaml(initial_positions_file)}">
        <origin xyz="0 0 0" rpy="0 0 0" />
    </xacro:load_robot>

    <!-- right arm -->
    <xacro:load_robot
        parent="freddy_torso_shoulder_right_arm_attach_link"
        arm="$(arg arm)"
        gripper="$(arg gripper)"
        gripper_joint_name="$(arg gripper_joint_name)"
        gripper_max_velocity="$(arg gripper_max_velocity)"
        gripper_max_force="$(arg gripper_max_force)"
        dof="$(arg dof)"
        vision="$(arg vision)"
        robot_ip="$(arg robot_ip_right)"
        username="$(arg username)"
        password="$(arg password)"
        port="$(arg port)"
        port_realtime="$(arg port_realtime)"
        session_inactivity_timeout_ms="$(arg session_inactivity_timeout_ms)"
        connection_inactivity_timeout_ms="$(arg connection_inactivity_timeout_ms)"
        use_internal_bus_gripper_comm="$(arg use_internal_bus_gripper_comm)"
        prefix="$(arg prefix_arm_right)"
        use_fake_hardware="$(arg use_fake_hardware)"
        fake_sensor_commands="$(arg fake_sensor_commands)"
        sim_gazebo="$(arg sim_gazebo)"
        sim_ignition="$(arg sim_ignition)"
        sim_isaac="$(arg sim_isaac)"
        initial_positions="${xacro.load_yaml(initial_positions_file)}">
        <origin xyz="0 0 0" rpy="0 0 0" />
    </xacro:load_robot>

    <!-- grasp links -->
    <link name="kinova_left_grasp_link" />
    <link name="kinova_right_grasp_link" />

    <!-- grasp link joints -->
    <joint name="kinova_left_grasp_link_joint" type="fixed">
        <origin xyz="0 0 0.15" rpy="0 0 0" />
        <parent link="kinova_left_robotiq_85_base_link" />
        <child link="kinova_left_grasp_link" />
    </joint>

    <joint name="kinova_right_grasp_link_joint" type="fixed">
        <origin xyz="0 0 0.15" rpy="0 0 0" />
        <parent link="kinova_right_robotiq_85_base_link" />
        <child link="kinova_right_grasp_link" />
    </joint>
    <!-- Load arms end -->
    </xacro:if>

    <!-- <xacro:if value="$(arg sim_gazebo)">
        <gazebo reference="world">
        </gazebo>
        <gazebo>
            <plugin name="ros_gz_control" filename="libros_gz_control.so">
                <parameters>$(arg simulation_controllers)</parameters>
            </plugin>
        </gazebo>
    </xacro:if> -->

    <!-- Modified for Gazebo Harmonic -->
    <!-- <xacro:if value="$(arg sim_gz)">
        <gazebo reference="world">
        </gazebo>
        <gazebo>
            <plugin filename="libgz_ros2_control-system" name="gz_ros2_control::GazeboSimROS2ControlPlugin">
                <parameters>$(arg base_controller)</parameters>
            </plugin>
        </gazebo>
    </xacro:if> -->

    <!-- TODO: Verify if the below snippet works for dual arm setup -->
    <!-- <xacro:if value="$(arg sim_ignition)">
        <gazebo reference="world">
        </gazebo>
        <gazebo>
            <plugin filename="libign_ros2_control-system.so"
                name="ign_ros2_control::IgnitionROS2ControlPlugin">
                <parameters>$(arg simulation_controllers)</parameters>
                <controller_manager_node_name>$(arg prefix)controller_manager</controller_manager_node_name>
            </plugin>
            <plugin filename="libignition-gazebo-sensors-system.so"
                name="ignition::gazebo::systems::Sensors">
                <render_engine>$(arg gazebo_renderer)</render_engine>
            </plugin>
        </gazebo>
        <gazebo reference="camera_color_frame">
            <sensor name="camera_sensor" type="rgbd_camera">
                <camera>
                    <horizontal_fov>1.047</horizontal_fov>
                    <image>
                        <width>$(arg camera_width)</width>
                        <height>$(arg camera_height)</height>
                        <format>RGB_INT8</format>
                    </image>
                    <clip>
                        <near>0.1</near>
                        <far>5</far>
                    </clip>
                    <distortion>
                        <k1>0.0</k1>
                        <k2>0.0</k2>
                        <k3>0.0</k3>
                        <p1>0.0</p1>
                        <p2>0.0</p2>
                        <center>0.5 0.5</center>
                    </distortion>
                    <lens>
                        <intrinsics>
                            <fx>554.25469</fx>
                            <fy>554.25469</fy>
                            <cx>320.5</cx>
                            <cy>240.5</cy>
                            <s>0</s>
                        </intrinsics>
                        <projection>
                            <p_fx>554.25469</p_fx>
                            <p_fy>554.25469</p_fy>
                            <p_cx>320.5</p_cx>
                            <p_cy>240.5</p_cy>
                            <tx>0</tx>
                            <ty>0</ty>
                        </projection>
                    </lens>
                    <noise>
                        <type>gaussian</type>
                        <mean>0</mean>
                        <stddev>0.00</stddev>
                    </noise>
                    <depth_camera>
                        <clip>
                            <near>0.25</near>
                            <far>5</far>
                        </clip>
                    </depth_camera>
                    <optical_frame_id>color_optical_frame</optical_frame_id>
                </camera>
                <ignition_frame_id>camera_color_frame</ignition_frame_id>
                <always_on>1</always_on>
                <update_rate>$(arg camera_fps)</update_rate>
                <visualize>true</visualize>
                <topic>wrist_mounted_camera</topic>
                <enable_metrics>false</enable_metrics>
            </sensor>
        </gazebo>
    </xacro:if> -->

    <!-- <xacro:freddy_ros2_control
    name="FreddyROS2Control" tf_prefix="$(arg tf_prefix)" type="actuator" /> -->

</robot>